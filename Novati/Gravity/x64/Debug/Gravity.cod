; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__84D8EC97_stdafx@h DB 01H
__E7450D50_gravity@pch DB 01H
__122CF1B0_xstddef DB 01H
__E53366A2_utility DB 01H
__F2A749D8_streambuf DB 01H
__375B2D08_ostream DB 01H
__548B1832_istream DB 01H
__FB7583FD_xstring DB 01H
__5178C8C0_gravity@h DB 01H
__2D2A2B9F_gravity@cpp DB 01H
__938589ED_algorithm DB 01H
__7AAD89C5_string DB 01H
__D1FEDD45_ios DB 01H
__BACC91DB_xlocnum DB 01H
__9B0361F4_xiosbase DB 01H
__FD5040F3_system_error DB 01H
__420D52D3_xcall_once@h DB 01H
__244BF7CC_xlocale DB 01H
__223B5856_xfacet DB 01H
__0E7E0F59_memory DB 01H
__A2E616E7_xlocinfo DB 01H
__C42C8B73_vcruntime_typeinfo@h DB 01H
__F007F164_stdexcept DB 01H
__C334353D_xatomic0@h DB 01H
__1CE3C767_xmemory0 DB 01H
__CDB00636_xutility DB 01H
__7E39D651_iosfwd DB 01H
__A452D4A0_stdio@h DB 01H
__7949CB39_exception DB 01H
__9BB4E194_vcruntime_exception@h DB 01H
__331E732B_malloc@h DB 01H
__5ECFF36E_type_traits DB 01H
__B2D003D7_limits DB 01H
__5A74375D_wchar@h DB 01H
__A40A425D_stat@h DB 01H
__C0802A2B_corecrt_wtime@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__F0CC4AC4_corecrt_wio@h DB 01H
__41381B41_corecrt_wconio@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__3736D25A_xtgmath@h DB 01H
__824D367B_cmath DB 01H
__D23EE329_cstdlib DB 01H
__188180DA_corecrt_math@h DB 01H
__A73354DD_stdlib@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?length@?$char_traits@D@std@@SA_KQEBD@Z		; std::char_traits<char>::length
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	??0Gravity@GravityGM@@QEAA@HHPEAD@Z		; GravityGM::Gravity::Gravity
PUBLIC	??1Gravity@GravityGM@@QEAA@XZ			; GravityGM::Gravity::~Gravity
PUBLIC	?ApplyOneStep@Gravity@GravityGM@@QEAAXXZ	; GravityGM::Gravity::ApplyOneStep
PUBLIC	?CheckGravity@Gravity@GravityGM@@QEAA_NXZ	; GravityGM::Gravity::CheckGravity
PUBLIC	?PrintMap@Gravity@GravityGM@@QEAAXXZ		; GravityGM::Gravity::PrintMap
PUBLIC	?Resolve@Gravity@GravityGM@@QEAAPEADXZ		; GravityGM::Gravity::Resolve
PUBLIC	DllMain
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
EXTRN	strlen:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$char_traits@D@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?length@?$char_traits@D@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$char_traits@D@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?eof@?$char_traits@D@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Gravity@GravityGM@@QEAA@HHPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??0Gravity@GravityGM@@QEAA@HHPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Gravity@GravityGM@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??1Gravity@GravityGM@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ApplyOneStep@Gravity@GravityGM@@QEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+310
	DD	imagerel $unwind$?ApplyOneStep@Gravity@GravityGM@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CheckGravity@Gravity@GravityGM@@QEAA_NXZ DD imagerel $LN11
	DD	imagerel $LN11+237
	DD	imagerel $unwind$?CheckGravity@Gravity@GravityGM@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PrintMap@Gravity@GravityGM@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+260
	DD	imagerel $unwind$?PrintMap@Gravity@GravityGM@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Resolve@Gravity@GravityGM@@QEAAPEADXZ DD imagerel $LN6
	DD	imagerel $LN6+118
	DD	imagerel $unwind$?Resolve@Gravity@GravityGM@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$DllMain DD imagerel $LN6
	DD	imagerel $LN6+90
	DD	imagerel $unwind$DllMain
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD imagerel $LN23
	DD	imagerel $LN23+1012
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+80
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1045
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+80
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+231
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+217
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN5
	DD	imagerel $LN5+331
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+119
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+90
	DD	00H
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+314
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025053a11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031019H
	DD	0700c4210H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+281
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+311
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+924
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+982
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+20
	DD	02H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+65
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054b19H
	DD	01132318H
	DD	0700c0049H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	023bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	08H
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0218H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD 031019H
	DD	0700c4210H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z+110
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z+242
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z+853
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z+949
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+20
	DD	02H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA+65
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 025054a19H
	DD	01122317H
	DD	0700b004dH
	DD	0500aH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	025bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcVarDesc DD 048H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcVarDesc
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	08H
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
	DD	0238H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DllMain DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Resolve@Gravity@GravityGM@@QEAAPEADXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PrintMap@Gravity@GravityGM@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CheckGravity@Gravity@GravityGM@@QEAA_NXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ApplyOneStep@Gravity@GravityGM@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Gravity@GravityGM@@QEAA@XZ DD imagerel ??1Gravity@GravityGM@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Gravity@GravityGM@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Gravity@GravityGM@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Gravity@GravityGM@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Gravity@GravityGM@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Gravity@GravityGM@@QEAA@HHPEAD@Z DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?eof@?$char_traits@D@std@@SAHXZ DD imagerel ?eof@?$char_traits@D@std@@SAHXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?eof@?$char_traits@D@std@@SAHXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?eof@?$char_traits@D@std@@SAHXZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$char_traits@D@std@@SAHXZ DD 025052919H
	DD	010a230fH
	DD	070030021H
	DD	05002H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?eof@?$char_traits@D@std@@SAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z DD imagerel ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z DD 025053a19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$char_traits@D@std@@SA_KQEBD@Z DD imagerel ?length@?$char_traits@D@std@@SA_KQEBD@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?length@?$char_traits@D@std@@SA_KQEBD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?length@?$char_traits@D@std@@SA_KQEBD@Z
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$char_traits@D@std@@SA_KQEBD@Z DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?length@?$char_traits@D@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 152
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__375B2D08_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 153
  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
; Line 154
  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 135
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__375B2D08_ostream
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
; Line 137
  00042	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00047	90		 npad	 1
  00048	0f b6 c0	 movzx	 eax, al
  0004b	85 c0		 test	 eax, eax
  0004d	75 11		 jne	 SHORT $LN2@sentry
; Line 139
  0004f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0005f	90		 npad	 1
$LN2@sentry:
; Line 144
  00060	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00067	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0006c	90		 npad	 1
  0006d	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 121
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__375B2D08_ostream
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 120
  00046	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  0004d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  00059	90		 npad	 1
; Line 122
  0005a	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00061	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00064	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00068	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0006f	48 03 c8	 add	 rcx, rax
  00072	48 8b c1	 mov	 rax, rcx
  00075	48 8b c8	 mov	 rcx, rax
  00078	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  0007e	0f b6 c0	 movzx	 eax, al
  00081	85 c0		 test	 eax, eax
  00083	0f 84 83 00 00
	00		 je	 $LN2@sentry
  00089	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00097	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0009e	48 03 c8	 add	 rcx, rax
  000a1	48 8b c1	 mov	 rax, rcx
  000a4	48 8b c8	 mov	 rcx, rax
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ad	48 85 c0	 test	 rax, rax
  000b0	74 5a		 je	 SHORT $LN2@sentry
  000b2	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bc	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c0	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000c7	48 03 c8	 add	 rcx, rax
  000ca	48 8b c1	 mov	 rax, rcx
  000cd	48 8b c8	 mov	 rcx, rax
  000d0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000d6	48 3b 85 08 01
	00 00		 cmp	 rax, QWORD PTR _Ostr$[rbp]
  000dd	74 2d		 je	 SHORT $LN2@sentry
; Line 123
  000df	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000e6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e9	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000ed	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000f4	48 03 c8	 add	 rcx, rax
  000f7	48 8b c1	 mov	 rax, rcx
  000fa	48 8b c8	 mov	 rcx, rax
  000fd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  00103	48 8b c8	 mov	 rcx, rax
  00106	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
$LN2@sentry:
; Line 124
  0010c	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00113	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00116	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0011a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00121	48 03 c8	 add	 rcx, rax
  00124	48 8b c1	 mov	 rax, rcx
  00127	48 8b c8	 mov	 rcx, rax
  0012a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00130	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00137	88 41 08	 mov	 BYTE PTR [rcx+8], al
; Line 125
  0013a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00141	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00148	5f		 pop	 rdi
  00149	5d		 pop	 rbp
  0014a	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
tv87 = 216
tv72 = 216
tv94 = 224
this$ = 272
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 105
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__375B2D08_ostream
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
; Line 106
  00042	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00053	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv72[rbp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00061	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  00068	48 03 c8	 add	 rcx, rax
  0006b	48 8b c1	 mov	 rax, rcx
  0006e	48 8b c8	 mov	 rcx, rax
  00071	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00077	90		 npad	 1
  00078	48 85 c0	 test	 rax, rax
  0007b	74 52		 je	 SHORT $LN2@Sentry_bas
; Line 107
  0007d	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00087	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  0008e	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv87[rbp]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0009c	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000a3	48 03 c8	 add	 rcx, rax
  000a6	48 8b c1	 mov	 rax, rcx
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  000b2	90		 npad	 1
  000b3	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv94[rbp], rax
  000ba	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR tv94[rbp]
  000c1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c4	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR tv94[rbp]
  000cb	ff 50 10	 call	 QWORD PTR [rax+16]
  000ce	90		 npad	 1
$LN2@Sentry_bas:
; Line 108
  000cf	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000d6	5f		 pop	 rdi
  000d7	5d		 pop	 rbp
  000d8	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
tv88 = 192
tv73 = 192
tv95 = 200
this$ = 240
_Ostr$ = 248
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 99
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__375B2D08_ostream
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 98
  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 100
  0004c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00056	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0005d	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv73[rbp]
  00064	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00067	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0006b	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b c8	 mov	 rcx, rax
  0007b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00081	48 85 c0	 test	 rax, rax
  00084	74 50		 je	 SHORT $LN2@Sentry_bas
; Line 101
  00086	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00090	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  00097	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv88[rbp]
  0009e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a1	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000a5	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv88[rbp]
  000ac	48 03 c8	 add	 rcx, rax
  000af	48 8b c1	 mov	 rax, rcx
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  000bb	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv95[rbp], rax
  000c2	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR tv95[rbp]
  000c9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000cc	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv95[rbp]
  000d3	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:
; Line 102
  000d6	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000dd	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000e4	5f		 pop	 rdi
  000e5	5d		 pop	 rbp
  000e6	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv300 = 516
tv295 = 516
tv139 = 516
tv301 = 520
tv298 = 520
tv296 = 520
tv137 = 520
tv302 = 528
tv299 = 528
tv297 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 790
$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 48 02
	00 00		 sub	 rsp, 584		; 00000248H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 92 00 00 00	 mov	 ecx, 146		; 00000092H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 68
	02 00 00	 mov	 rcx, QWORD PTR [rsp+616]
  0002f	48 c7 85 f8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T9[rbp], -2
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 18 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__375B2D08_ostream
  00052	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 793
  00057	c7 45 04 00 00
	00 00		 mov	 DWORD PTR _State$[rbp], 0
; Line 794
  0005e	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  00065	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SA_KQEBD@Z ; std::char_traits<char>::length
  0006a	48 89 45 28	 mov	 QWORD PTR _Count$[rbp], rax
; Line 795
  0006e	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0007c	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00083	48 03 c8	 add	 rcx, rax
  00086	48 8b c1	 mov	 rax, rcx
  00089	48 8b c8	 mov	 rcx, rax
  0008c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  00092	48 85 c0	 test	 rax, rax
  00095	7e 5b		 jle	 SHORT $LN17@operator
  00097	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0009e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a1	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000a5	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000ac	48 03 c8	 add	 rcx, rax
  000af	48 8b c1	 mov	 rax, rcx
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000bb	48 3b 45 28	 cmp	 rax, QWORD PTR _Count$[rbp]
  000bf	7e 31		 jle	 SHORT $LN17@operator
  000c1	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000c8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000cb	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000cf	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000d6	48 03 c8	 add	 rcx, rax
  000d9	48 8b c1	 mov	 rax, rcx
  000dc	48 8b c8	 mov	 rcx, rax
  000df	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000e5	48 2b 45 28	 sub	 rax, QWORD PTR _Count$[rbp]
  000e9	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  000f0	eb 0b		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000f2	48 c7 85 08 02
	00 00 00 00 00
	00		 mov	 QWORD PTR tv137[rbp], 0
$LN18@operator:
  000fd	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR tv137[rbp]
  00104	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
; Line 797
  00108	48 8b 95 40 02
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  0010f	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00113	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  00118	90		 npad	 1
; Line 799
  00119	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  0011d	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00122	0f b6 c0	 movzx	 eax, al
  00125	85 c0		 test	 eax, eax
  00127	75 0e		 jne	 SHORT $LN8@operator
; Line 800
  00129	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  0012c	83 c8 04	 or	 eax, 4
  0012f	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
; Line 801
  00132	e9 67 02 00 00	 jmp	 $LN9@operator
$LN8@operator:
; Line 804
  00137	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0013e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00141	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00145	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0014c	48 03 c8	 add	 rcx, rax
  0014f	48 8b c1	 mov	 rax, rcx
  00152	48 8b c8	 mov	 rcx, rax
  00155	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
  0015b	89 85 04 02 00
	00		 mov	 DWORD PTR tv139[rbp], eax
  00161	8b 85 04 02 00
	00		 mov	 eax, DWORD PTR tv139[rbp]
  00167	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  0016c	83 f8 40	 cmp	 eax, 64			; 00000040H
  0016f	0f 84 c8 00 00
	00		 je	 $LN11@operator
; Line 805
  00175	eb 0b		 jmp	 SHORT $LN4@operator
$LN2@operator:
  00177	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  0017b	48 ff c8	 dec	 rax
  0017e	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN4@operator:
  00182	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  00187	0f 8e b0 00 00
	00		 jle	 $LN11@operator
; Line 806
  0018d	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00194	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00197	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0019b	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  001a2	48 03 c8	 add	 rcx, rax
  001a5	48 8b c1	 mov	 rax, rcx
  001a8	48 8b c8	 mov	 rcx, rax
  001ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  001b1	88 85 04 02 00
	00		 mov	 BYTE PTR tv295[rbp], al
  001b7	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  001be	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001c1	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  001c5	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  001cc	48 03 c8	 add	 rcx, rax
  001cf	48 8b c1	 mov	 rax, rcx
  001d2	48 8b c8	 mov	 rcx, rax
  001d5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001db	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv296[rbp], rax
  001e2	0f b6 95 04 02
	00 00		 movzx	 edx, BYTE PTR tv295[rbp]
  001e9	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR tv296[rbp]
  001f0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  001f6	89 85 10 02 00
	00		 mov	 DWORD PTR tv297[rbp], eax
  001fc	8b 85 10 02 00
	00		 mov	 eax, DWORD PTR tv297[rbp]
  00202	89 85 54 01 00
	00		 mov	 DWORD PTR $T4[rbp], eax
  00208	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0020d	89 85 74 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00213	48 8d 95 54 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0021a	48 8d 8d 74 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00221	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  00226	0f b6 c0	 movzx	 eax, al
  00229	85 c0		 test	 eax, eax
  0022b	74 0b		 je	 SHORT $LN12@operator
; Line 809
  0022d	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00230	83 c8 04	 or	 eax, 4
  00233	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
; Line 810
  00236	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:
; Line 813
  00238	e9 3a ff ff ff	 jmp	 $LN2@operator
$LN11@operator:
; Line 814
  0023d	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  00241	75 60		 jne	 SHORT $LN13@operator
  00243	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0024a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0024d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00251	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00258	48 03 c8	 add	 rcx, rax
  0025b	48 8b c1	 mov	 rax, rcx
  0025e	48 8b c8	 mov	 rcx, rax
  00261	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00267	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv298[rbp], rax
  0026e	4c 8b 45 28	 mov	 r8, QWORD PTR _Count$[rbp]
  00272	48 8b 95 48 02
	00 00		 mov	 rdx, QWORD PTR _Val$[rbp]
  00279	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR tv298[rbp]
  00280	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
  00286	48 89 85 10 02
	00 00		 mov	 QWORD PTR tv299[rbp], rax
  0028d	48 8b 45 28	 mov	 rax, QWORD PTR _Count$[rbp]
  00291	48 39 85 10 02
	00 00		 cmp	 QWORD PTR tv299[rbp], rax
  00298	74 09		 je	 SHORT $LN13@operator
; Line 815
  0029a	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  0029d	83 c8 04	 or	 eax, 4
  002a0	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
$LN13@operator:
; Line 817
  002a3	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  002a7	0f 85 c8 00 00
	00		 jne	 $LN14@operator
; Line 818
  002ad	eb 0b		 jmp	 SHORT $LN7@operator
$LN5@operator:
  002af	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  002b3	48 ff c8	 dec	 rax
  002b6	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN7@operator:
  002ba	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  002bf	0f 8e b0 00 00
	00		 jle	 $LN14@operator
; Line 819
  002c5	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002cc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002cf	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002d3	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  002da	48 03 c8	 add	 rcx, rax
  002dd	48 8b c1	 mov	 rax, rcx
  002e0	48 8b c8	 mov	 rcx, rax
  002e3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  002e9	88 85 04 02 00
	00		 mov	 BYTE PTR tv300[rbp], al
  002ef	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002f6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002f9	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002fd	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00304	48 03 c8	 add	 rcx, rax
  00307	48 8b c1	 mov	 rax, rcx
  0030a	48 8b c8	 mov	 rcx, rax
  0030d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00313	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv301[rbp], rax
  0031a	0f b6 95 04 02
	00 00		 movzx	 edx, BYTE PTR tv300[rbp]
  00321	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR tv301[rbp]
  00328	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  0032e	89 85 10 02 00
	00		 mov	 DWORD PTR tv302[rbp], eax
  00334	8b 85 10 02 00
	00		 mov	 eax, DWORD PTR tv302[rbp]
  0033a	89 85 94 01 00
	00		 mov	 DWORD PTR $T6[rbp], eax
  00340	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00345	89 85 b4 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  0034b	48 8d 95 94 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  00352	48 8d 8d b4 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00359	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  0035e	0f b6 c0	 movzx	 eax, al
  00361	85 c0		 test	 eax, eax
  00363	74 0b		 je	 SHORT $LN15@operator
; Line 822
  00365	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00368	83 c8 04	 or	 eax, 4
  0036b	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
; Line 823
  0036e	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:
; Line 824
  00370	e9 3a ff ff ff	 jmp	 $LN5@operator
$LN14@operator:
; Line 825
  00375	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0037c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0037f	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00383	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0038a	48 03 c8	 add	 rcx, rax
  0038d	48 8b c1	 mov	 rax, rcx
  00390	33 d2		 xor	 edx, edx
  00392	48 8b c8	 mov	 rcx, rax
  00395	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
  0039b	90		 npad	 1
  0039c	eb 00		 jmp	 SHORT $LN9@operator
$LN23@operator:
$LN9@operator:
; Line 829
  0039e	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003a8	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  003ac	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  003b3	48 03 c8	 add	 rcx, rax
  003b6	48 8b c1	 mov	 rax, rcx
  003b9	45 33 c0	 xor	 r8d, r8d
  003bc	8b 55 04	 mov	 edx, DWORD PTR _State$[rbp]
  003bf	48 8b c8	 mov	 rcx, rax
  003c2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
; Line 830
  003c8	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003cf	48 89 85 d8 01
	00 00		 mov	 QWORD PTR $T8[rbp], rax
  003d6	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  003da	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  003df	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR $T8[rbp]
; Line 831
  003e6	48 8b f8	 mov	 rdi, rax
  003e9	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  003ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
  003f4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  003f9	48 8b c7	 mov	 rax, rdi
  003fc	48 8b 8d 18 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00403	48 33 cd	 xor	 rcx, rbp
  00406	e8 00 00 00 00	 call	 __security_check_cookie
  0040b	48 8d a5 28 02
	00 00		 lea	 rsp, QWORD PTR [rbp+552]
  00412	5f		 pop	 rdi
  00413	5d		 pop	 rbp
  00414	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv300 = 516
tv295 = 516
tv139 = 516
tv301 = 520
tv298 = 520
tv296 = 520
tv137 = 520
tv302 = 528
tv299 = 528
tv297 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv300 = 516
tv295 = 516
tv139 = 516
tv301 = 520
tv298 = 520
tv296 = 520
tv137 = 520
tv302 = 528
tv299 = 528
tv297 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
; Line 826
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00014	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	41 b0 01	 mov	 r8b, 1
  00032	ba 04 00 00 00	 mov	 edx, 4
  00037	48 8b c8	 mov	 rcx, rax
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  00040	90		 npad	 1
  00041	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00048	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv300 = 516
tv295 = 516
tv139 = 516
tv301 = 520
tv298 = 520
tv296 = 520
tv137 = 520
tv302 = 528
tv299 = 528
tv297 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv300 = 516
tv295 = 516
tv139 = 516
tv301 = 520
tv298 = 520
tv296 = 520
tv137 = 520
tv302 = 528
tv299 = 528
tv297 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
; Line 826
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00014	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	41 b0 01	 mov	 r8b, 1
  00032	ba 04 00 00 00	 mov	 edx, 4
  00037	48 8b c8	 mov	 rcx, rax
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  00040	90		 npad	 1
  00041	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00048	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z
_TEXT	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
$T12 = 536
tv289 = 548
tv284 = 548
tv65 = 548
tv290 = 552
tv287 = 552
tv285 = 552
tv130 = 552
tv291 = 560
tv288 = 560
tv286 = 560
__$ArrayPad$ = 568
_Ostr$ = 608
_Ch$ = 616
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ostream
; Line 836
$LN23:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 68 02
	00 00		 sub	 rsp, 616		; 00000268H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 9a 00 00 00	 mov	 ecx, 154		; 0000009aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 88
	02 00 00	 mov	 rcx, QWORD PTR [rsp+648]
  0002e	48 c7 85 18 02
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T12[rbp], -2
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 38 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__375B2D08_ostream
  00051	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 839
  00056	c7 45 04 00 00
	00 00		 mov	 DWORD PTR _State$[rbp], 0
; Line 840
  0005d	48 8b 95 60 02
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00064	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00068	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  0006d	90		 npad	 1
; Line 842
  0006e	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00072	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00077	0f b6 c0	 movzx	 eax, al
  0007a	85 c0		 test	 eax, eax
  0007c	0f 84 d5 02 00
	00		 je	 $LN8@operator
; Line 844
  00082	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00090	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00097	48 03 c8	 add	 rcx, rax
  0009a	48 8b c1	 mov	 rax, rcx
  0009d	48 8b c8	 mov	 rcx, rax
  000a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000a6	48 83 f8 01	 cmp	 rax, 1
  000aa	7f 0d		 jg	 SHORT $LN15@operator
  000ac	48 c7 85 28 02
	00 00 00 00 00
	00		 mov	 QWORD PTR tv130[rbp], 0
  000b7	eb 2e		 jmp	 SHORT $LN16@operator
$LN15@operator:
  000b9	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000c0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c3	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c7	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000ce	48 03 c8	 add	 rcx, rax
  000d1	48 8b c1	 mov	 rax, rcx
  000d4	48 8b c8	 mov	 rcx, rax
  000d7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000dd	48 ff c8	 dec	 rax
  000e0	48 89 85 28 02
	00 00		 mov	 QWORD PTR tv130[rbp], rax
$LN16@operator:
  000e7	48 8b 85 28 02
	00 00		 mov	 rax, QWORD PTR tv130[rbp]
  000ee	48 89 45 58	 mov	 QWORD PTR _Pad$4[rbp], rax
; Line 847
  000f2	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000f9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000fc	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00100	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00107	48 03 c8	 add	 rcx, rax
  0010a	48 8b c1	 mov	 rax, rcx
  0010d	48 8b c8	 mov	 rcx, rax
  00110	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
  00116	89 85 24 02 00
	00		 mov	 DWORD PTR tv65[rbp], eax
  0011c	8b 85 24 02 00
	00		 mov	 eax, DWORD PTR tv65[rbp]
  00122	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00127	83 f8 40	 cmp	 eax, 64			; 00000040H
  0012a	0f 84 d0 00 00
	00		 je	 $LN10@operator
; Line 848
  00130	eb 0b		 jmp	 SHORT $LN4@operator
$LN2@operator:
; Line 849
  00132	48 8b 45 58	 mov	 rax, QWORD PTR _Pad$4[rbp]
  00136	48 ff c8	 dec	 rax
  00139	48 89 45 58	 mov	 QWORD PTR _Pad$4[rbp], rax
$LN4@operator:
; Line 848
  0013d	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  00141	0f 85 b9 00 00
	00		 jne	 $LN10@operator
  00147	48 83 7d 58 00	 cmp	 QWORD PTR _Pad$4[rbp], 0
  0014c	0f 8e ae 00 00
	00		 jle	 $LN10@operator
; Line 850
  00152	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00159	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0015c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00160	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00167	48 03 c8	 add	 rcx, rax
  0016a	48 8b c1	 mov	 rax, rcx
  0016d	48 8b c8	 mov	 rcx, rax
  00170	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  00176	88 85 24 02 00
	00		 mov	 BYTE PTR tv284[rbp], al
  0017c	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00183	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00186	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0018a	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00191	48 03 c8	 add	 rcx, rax
  00194	48 8b c1	 mov	 rax, rcx
  00197	48 8b c8	 mov	 rcx, rax
  0019a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001a0	48 89 85 28 02
	00 00		 mov	 QWORD PTR tv285[rbp], rax
  001a7	0f b6 95 24 02
	00 00		 movzx	 edx, BYTE PTR tv284[rbp]
  001ae	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR tv285[rbp]
  001b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  001bb	89 85 30 02 00
	00		 mov	 DWORD PTR tv286[rbp], eax
  001c1	8b 85 30 02 00
	00		 mov	 eax, DWORD PTR tv286[rbp]
  001c7	89 85 34 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  001cd	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  001d2	89 85 54 01 00
	00		 mov	 DWORD PTR $T6[rbp], eax
  001d8	48 8d 95 34 01
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  001df	48 8d 8d 54 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  001e6	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  001eb	0f b6 c0	 movzx	 eax, al
  001ee	85 c0		 test	 eax, eax
  001f0	74 09		 je	 SHORT $LN11@operator
; Line 852
  001f2	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  001f5	83 c8 04	 or	 eax, 4
  001f8	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
$LN11@operator:
; Line 854
  001fb	e9 32 ff ff ff	 jmp	 $LN2@operator
$LN10@operator:
; Line 855
  00200	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  00204	75 7f		 jne	 SHORT $LN12@operator
  00206	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0020d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00210	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00214	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0021b	48 03 c8	 add	 rcx, rax
  0021e	48 8b c1	 mov	 rax, rcx
  00221	48 8b c8	 mov	 rcx, rax
  00224	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0022a	48 89 85 28 02
	00 00		 mov	 QWORD PTR tv287[rbp], rax
  00231	0f b6 95 68 02
	00 00		 movzx	 edx, BYTE PTR _Ch$[rbp]
  00238	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR tv287[rbp]
  0023f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00245	89 85 30 02 00
	00		 mov	 DWORD PTR tv288[rbp], eax
  0024b	8b 85 30 02 00
	00		 mov	 eax, DWORD PTR tv288[rbp]
  00251	89 85 74 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  00257	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0025c	89 85 94 01 00
	00		 mov	 DWORD PTR $T8[rbp], eax
  00262	48 8d 95 74 01
	00 00		 lea	 rdx, QWORD PTR $T7[rbp]
  00269	48 8d 8d 94 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  00270	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  00275	0f b6 c0	 movzx	 eax, al
  00278	85 c0		 test	 eax, eax
  0027a	74 09		 je	 SHORT $LN12@operator
; Line 857
  0027c	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  0027f	83 c8 04	 or	 eax, 4
  00282	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
$LN12@operator:
; Line 859
  00285	eb 0b		 jmp	 SHORT $LN7@operator
$LN5@operator:
; Line 860
  00287	48 8b 45 58	 mov	 rax, QWORD PTR _Pad$4[rbp]
  0028b	48 ff c8	 dec	 rax
  0028e	48 89 45 58	 mov	 QWORD PTR _Pad$4[rbp], rax
$LN7@operator:
; Line 859
  00292	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  00296	0f 85 b9 00 00
	00		 jne	 $LN6@operator
  0029c	48 83 7d 58 00	 cmp	 QWORD PTR _Pad$4[rbp], 0
  002a1	0f 8e ae 00 00
	00		 jle	 $LN6@operator
; Line 861
  002a7	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002ae	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002b1	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002b5	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  002bc	48 03 c8	 add	 rcx, rax
  002bf	48 8b c1	 mov	 rax, rcx
  002c2	48 8b c8	 mov	 rcx, rax
  002c5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  002cb	88 85 24 02 00
	00		 mov	 BYTE PTR tv289[rbp], al
  002d1	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002d8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002db	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002df	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  002e6	48 03 c8	 add	 rcx, rax
  002e9	48 8b c1	 mov	 rax, rcx
  002ec	48 8b c8	 mov	 rcx, rax
  002ef	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  002f5	48 89 85 28 02
	00 00		 mov	 QWORD PTR tv290[rbp], rax
  002fc	0f b6 95 24 02
	00 00		 movzx	 edx, BYTE PTR tv289[rbp]
  00303	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR tv290[rbp]
  0030a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00310	89 85 30 02 00
	00		 mov	 DWORD PTR tv291[rbp], eax
  00316	8b 85 30 02 00
	00		 mov	 eax, DWORD PTR tv291[rbp]
  0031c	89 85 b4 01 00
	00		 mov	 DWORD PTR $T9[rbp], eax
  00322	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00327	89 85 d4 01 00
	00		 mov	 DWORD PTR $T10[rbp], eax
  0032d	48 8d 95 b4 01
	00 00		 lea	 rdx, QWORD PTR $T9[rbp]
  00334	48 8d 8d d4 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0033b	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  00340	0f b6 c0	 movzx	 eax, al
  00343	85 c0		 test	 eax, eax
  00345	74 09		 je	 SHORT $LN13@operator
; Line 863
  00347	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  0034a	83 c8 04	 or	 eax, 4
  0034d	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
$LN13@operator:
; Line 864
  00350	e9 32 ff ff ff	 jmp	 $LN5@operator
$LN6@operator:
  00355	eb 00		 jmp	 SHORT $LN8@operator
$LN21@operator:
$LN8@operator:
; Line 867
  00357	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0035e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00361	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00365	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0036c	48 03 c8	 add	 rcx, rax
  0036f	48 8b c1	 mov	 rax, rcx
  00372	33 d2		 xor	 edx, edx
  00374	48 8b c8	 mov	 rcx, rax
  00377	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
; Line 868
  0037d	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00384	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00387	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0038b	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00392	48 03 c8	 add	 rcx, rax
  00395	48 8b c1	 mov	 rax, rcx
  00398	45 33 c0	 xor	 r8d, r8d
  0039b	8b 55 04	 mov	 edx, DWORD PTR _State$[rbp]
  0039e	48 8b c8	 mov	 rcx, rax
  003a1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
; Line 869
  003a7	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003ae	48 89 85 f8 01
	00 00		 mov	 QWORD PTR $T11[rbp], rax
  003b5	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ok$[rbp]
  003b9	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  003be	48 8b 85 f8 01
	00 00		 mov	 rax, QWORD PTR $T11[rbp]
; Line 870
  003c5	48 8b f8	 mov	 rdi, rax
  003c8	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  003cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$rtcFrameData
  003d3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  003d8	48 8b c7	 mov	 rax, rdi
  003db	48 8b 8d 38 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  003e2	48 33 cd	 xor	 rcx, rbp
  003e5	e8 00 00 00 00	 call	 __security_check_cookie
  003ea	48 8d a5 48 02
	00 00		 lea	 rsp, QWORD PTR [rbp+584]
  003f1	5f		 pop	 rdi
  003f2	5d		 pop	 rbp
  003f3	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
$T12 = 536
tv289 = 548
tv284 = 548
tv65 = 548
tv290 = 552
tv287 = 552
tv285 = 552
tv130 = 552
tv291 = 560
tv288 = 560
tv286 = 560
__$ArrayPad$ = 568
_Ostr$ = 608
_Ch$ = 616
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
$T12 = 536
tv289 = 548
tv284 = 548
tv65 = 548
tv290 = 552
tv287 = 552
tv285 = 552
tv130 = 552
tv291 = 560
tv288 = 560
tv286 = 560
__$ArrayPad$ = 568
_Ostr$ = 608
_Ch$ = 616
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
; Line 864
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
  00014	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	41 b0 01	 mov	 r8b, 1
  00032	ba 04 00 00 00	 mov	 edx, 4
  00037	48 8b c8	 mov	 rcx, rax
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  00040	90		 npad	 1
  00041	48 8d 05 00 00
	00 00		 lea	 rax, $LN21@catch$1
  00048	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
$T12 = 536
tv289 = 548
tv284 = 548
tv65 = 548
tv290 = 552
tv287 = 552
tv285 = 552
tv130 = 552
tv291 = 560
tv288 = 560
tv286 = 560
__$ArrayPad$ = 568
_Ostr$ = 608
_Ch$ = 616
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Ok$ = 40
_Pad$4 = 88
$T5 = 308
$T6 = 340
$T7 = 372
$T8 = 404
$T9 = 436
$T10 = 468
$T11 = 504
$T12 = 536
tv289 = 548
tv284 = 548
tv65 = 548
tv290 = 552
tv287 = 552
tv285 = 552
tv130 = 552
tv291 = 560
tv288 = 560
tv286 = 560
__$ArrayPad$ = 568
_Ostr$ = 608
_Ch$ = 616
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
; Line 864
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z$0:
  00014	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 60 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	41 b0 01	 mov	 r8b, 1
  00032	ba 04 00 00 00	 mov	 edx, 4
  00037	48 8b c8	 mov	 rcx, rax
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  00040	90		 npad	 1
  00041	48 8d 05 00 00
	00 00		 lea	 rax, $LN21@catch$1
  00048	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT DllMain
_TEXT	SEGMENT
tv64 = 192
hModule$ = 240
ul_reason_for_call$ = 248
lpReserved$ = 256
DllMain	PROC						; COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 17
$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 18
  0003f	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR ul_reason_for_call$[rbp]
  00045	89 85 c0 00 00
	00		 mov	 DWORD PTR tv64[rbp], eax
; Line 26
  0004b	b8 01 00 00 00	 mov	 eax, 1
; Line 27
  00050	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
DllMain	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Resolve@Gravity@GravityGM@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 224
?Resolve@Gravity@GravityGM@@QEAAPEADXZ PROC		; GravityGM::Gravity::Resolve, COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 51
$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@Resolve:
; Line 53
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?ApplyOneStep@Gravity@GravityGM@@QEAAXXZ ; GravityGM::Gravity::ApplyOneStep
; Line 54
  00042	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ?PrintMap@Gravity@GravityGM@@QEAAXXZ ; GravityGM::Gravity::PrintMap
; Line 55
  0004e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ?CheckGravity@Gravity@GravityGM@@QEAA_NXZ ; GravityGM::Gravity::CheckGravity
  0005a	0f b6 c0	 movzx	 eax, al
  0005d	85 c0		 test	 eax, eax
  0005f	75 d5		 jne	 SHORT $LN4@Resolve
; Line 57
  00061	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
; Line 58
  0006c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
?Resolve@Gravity@GravityGM@@QEAAPEADXZ ENDP		; GravityGM::Gravity::Resolve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PrintMap@Gravity@GravityGM@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 4
j$2 = 36
this$ = 288
?PrintMap@Gravity@GravityGM@@QEAAXXZ PROC		; GravityGM::Gravity::PrintMap, COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 70
$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 71
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  0003d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00044	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 72
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  00050	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00057	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 73
  0005c	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  00066	ff c8		 dec	 eax
  00068	89 45 04	 mov	 DWORD PTR i$1[rbp], eax
  0006b	eb 08		 jmp	 SHORT $LN4@PrintMap
$LN2@PrintMap:
  0006d	8b 45 04	 mov	 eax, DWORD PTR i$1[rbp]
  00070	ff c8		 dec	 eax
  00072	89 45 04	 mov	 DWORD PTR i$1[rbp], eax
$LN4@PrintMap:
  00075	83 7d 04 01	 cmp	 DWORD PTR i$1[rbp], 1
  00079	7e 6c		 jle	 SHORT $LN3@PrintMap
; Line 74
  0007b	c7 45 24 00 00
	00 00		 mov	 DWORD PTR j$2[rbp], 0
  00082	eb 08		 jmp	 SHORT $LN7@PrintMap
$LN5@PrintMap:
  00084	8b 45 24	 mov	 eax, DWORD PTR j$2[rbp]
  00087	ff c0		 inc	 eax
  00089	89 45 24	 mov	 DWORD PTR j$2[rbp], eax
$LN7@PrintMap:
  0008c	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00093	8b 00		 mov	 eax, DWORD PTR [rax]
  00095	39 45 24	 cmp	 DWORD PTR j$2[rbp], eax
  00098	7d 38		 jge	 SHORT $LN6@PrintMap
; Line 75
  0009a	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a1	8b 4d 04	 mov	 ecx, DWORD PTR i$1[rbp]
  000a4	0f af 08	 imul	 ecx, DWORD PTR [rax]
  000a7	8b c1		 mov	 eax, ecx
  000a9	48 98		 cdqe
  000ab	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b2	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000b6	48 03 c8	 add	 rcx, rax
  000b9	48 8b c1	 mov	 rax, rcx
  000bc	48 63 4d 24	 movsxd	 rcx, DWORD PTR j$2[rbp]
  000c0	0f b6 14 08	 movzx	 edx, BYTE PTR [rax+rcx]
  000c4	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  000cb	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
  000d0	eb b2		 jmp	 SHORT $LN5@PrintMap
$LN6@PrintMap:
; Line 77
  000d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  000d9	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  000e0	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 78
  000e5	eb 86		 jmp	 SHORT $LN2@PrintMap
$LN3@PrintMap:
; Line 79
  000e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  000ee	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  000f5	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 80
  000fa	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?PrintMap@Gravity@GravityGM@@QEAAXXZ ENDP		; GravityGM::Gravity::PrintMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CheckGravity@Gravity@GravityGM@@QEAA_NXZ
_TEXT	SEGMENT
i$1 = 4
j$2 = 36
this$ = 288
?CheckGravity@Gravity@GravityGM@@QEAA_NXZ PROC		; GravityGM::Gravity::CheckGravity, COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 60
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 61
  00036	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  00040	ff c8		 dec	 eax
  00042	89 45 04	 mov	 DWORD PTR i$1[rbp], eax
  00045	eb 08		 jmp	 SHORT $LN4@CheckGravi
$LN2@CheckGravi:
  00047	8b 45 04	 mov	 eax, DWORD PTR i$1[rbp]
  0004a	ff c8		 dec	 eax
  0004c	89 45 04	 mov	 DWORD PTR i$1[rbp], eax
$LN4@CheckGravi:
  0004f	83 7d 04 01	 cmp	 DWORD PTR i$1[rbp], 1
  00053	0f 8c 88 00 00
	00		 jl	 $LN3@CheckGravi
; Line 62
  00059	c7 45 24 00 00
	00 00		 mov	 DWORD PTR j$2[rbp], 0
  00060	eb 08		 jmp	 SHORT $LN7@CheckGravi
$LN5@CheckGravi:
  00062	8b 45 24	 mov	 eax, DWORD PTR j$2[rbp]
  00065	ff c0		 inc	 eax
  00067	89 45 24	 mov	 DWORD PTR j$2[rbp], eax
$LN7@CheckGravi:
  0006a	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	8b 00		 mov	 eax, DWORD PTR [rax]
  00073	39 45 24	 cmp	 DWORD PTR j$2[rbp], eax
  00076	7d 64		 jge	 SHORT $LN6@CheckGravi
; Line 63
  00078	8b 45 04	 mov	 eax, DWORD PTR i$1[rbp]
  0007b	ff c8		 dec	 eax
  0007d	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00084	0f af 01	 imul	 eax, DWORD PTR [rcx]
  00087	48 98		 cdqe
  00089	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00090	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00094	48 03 c8	 add	 rcx, rax
  00097	48 8b c1	 mov	 rax, rcx
  0009a	48 63 4d 24	 movsxd	 rcx, DWORD PTR j$2[rbp]
  0009e	0f be 04 08	 movsx	 eax, BYTE PTR [rax+rcx]
  000a2	83 f8 23	 cmp	 eax, 35			; 00000023H
  000a5	75 33		 jne	 SHORT $LN8@CheckGravi
; Line 64
  000a7	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ae	8b 4d 04	 mov	 ecx, DWORD PTR i$1[rbp]
  000b1	0f af 08	 imul	 ecx, DWORD PTR [rax]
  000b4	8b c1		 mov	 eax, ecx
  000b6	48 98		 cdqe
  000b8	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000bf	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000c3	48 03 c8	 add	 rcx, rax
  000c6	48 8b c1	 mov	 rax, rcx
  000c9	48 63 4d 24	 movsxd	 rcx, DWORD PTR j$2[rbp]
  000cd	0f be 04 08	 movsx	 eax, BYTE PTR [rax+rcx]
  000d1	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  000d4	75 04		 jne	 SHORT $LN9@CheckGravi
; Line 65
  000d6	b0 01		 mov	 al, 1
  000d8	eb 09		 jmp	 SHORT $LN1@CheckGravi
$LN9@CheckGravi:
$LN8@CheckGravi:
; Line 67
  000da	eb 86		 jmp	 SHORT $LN5@CheckGravi
$LN6@CheckGravi:
  000dc	e9 66 ff ff ff	 jmp	 $LN2@CheckGravi
$LN3@CheckGravi:
  000e1	32 c0		 xor	 al, al
$LN1@CheckGravi:
; Line 68
  000e3	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000ea	5f		 pop	 rdi
  000eb	5d		 pop	 rbp
  000ec	c3		 ret	 0
?CheckGravity@Gravity@GravityGM@@QEAA_NXZ ENDP		; GravityGM::Gravity::CheckGravity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ApplyOneStep@Gravity@GravityGM@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 4
j$2 = 36
this$ = 288
?ApplyOneStep@Gravity@GravityGM@@QEAAXXZ PROC		; GravityGM::Gravity::ApplyOneStep, COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 41
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 42
  00036	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  00040	ff c8		 dec	 eax
  00042	89 45 04	 mov	 DWORD PTR i$1[rbp], eax
  00045	eb 08		 jmp	 SHORT $LN4@ApplyOneSt
$LN2@ApplyOneSt:
  00047	8b 45 04	 mov	 eax, DWORD PTR i$1[rbp]
  0004a	ff c8		 dec	 eax
  0004c	89 45 04	 mov	 DWORD PTR i$1[rbp], eax
$LN4@ApplyOneSt:
  0004f	83 7d 04 01	 cmp	 DWORD PTR i$1[rbp], 1
  00053	0f 8c d3 00 00
	00		 jl	 $LN3@ApplyOneSt
; Line 43
  00059	c7 45 24 00 00
	00 00		 mov	 DWORD PTR j$2[rbp], 0
  00060	eb 08		 jmp	 SHORT $LN7@ApplyOneSt
$LN5@ApplyOneSt:
  00062	8b 45 24	 mov	 eax, DWORD PTR j$2[rbp]
  00065	ff c0		 inc	 eax
  00067	89 45 24	 mov	 DWORD PTR j$2[rbp], eax
$LN7@ApplyOneSt:
  0006a	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	8b 00		 mov	 eax, DWORD PTR [rax]
  00073	39 45 24	 cmp	 DWORD PTR j$2[rbp], eax
  00076	0f 8d ab 00 00
	00		 jge	 $LN6@ApplyOneSt
; Line 44
  0007c	8b 45 04	 mov	 eax, DWORD PTR i$1[rbp]
  0007f	ff c8		 dec	 eax
  00081	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00088	0f af 01	 imul	 eax, DWORD PTR [rcx]
  0008b	48 98		 cdqe
  0008d	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00094	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00098	48 03 c8	 add	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 63 4d 24	 movsxd	 rcx, DWORD PTR j$2[rbp]
  000a2	0f be 04 08	 movsx	 eax, BYTE PTR [rax+rcx]
  000a6	83 f8 23	 cmp	 eax, 35			; 00000023H
  000a9	75 77		 jne	 SHORT $LN8@ApplyOneSt
; Line 45
  000ab	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b2	8b 4d 04	 mov	 ecx, DWORD PTR i$1[rbp]
  000b5	0f af 08	 imul	 ecx, DWORD PTR [rax]
  000b8	8b c1		 mov	 eax, ecx
  000ba	48 98		 cdqe
  000bc	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c3	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000c7	48 03 c8	 add	 rcx, rax
  000ca	48 8b c1	 mov	 rax, rcx
  000cd	48 63 4d 24	 movsxd	 rcx, DWORD PTR j$2[rbp]
  000d1	0f be 04 08	 movsx	 eax, BYTE PTR [rax+rcx]
  000d5	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  000d8	75 48		 jne	 SHORT $LN9@ApplyOneSt
; Line 46
  000da	8b 45 04	 mov	 eax, DWORD PTR i$1[rbp]
  000dd	ff c8		 dec	 eax
  000df	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e6	0f af 01	 imul	 eax, DWORD PTR [rcx]
  000e9	48 98		 cdqe
  000eb	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000f2	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]
  000f6	48 63 4d 24	 movsxd	 rcx, DWORD PTR j$2[rbp]
  000fa	c6 04 08 2e	 mov	 BYTE PTR [rax+rcx], 46	; 0000002eH
; Line 47
  000fe	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00105	8b 4d 04	 mov	 ecx, DWORD PTR i$1[rbp]
  00108	0f af 08	 imul	 ecx, DWORD PTR [rax]
  0010b	8b c1		 mov	 eax, ecx
  0010d	48 98		 cdqe
  0010f	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00116	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]
  0011a	48 63 4d 24	 movsxd	 rcx, DWORD PTR j$2[rbp]
  0011e	c6 04 08 23	 mov	 BYTE PTR [rax+rcx], 35	; 00000023H
$LN9@ApplyOneSt:
$LN8@ApplyOneSt:
; Line 49
  00122	e9 3b ff ff ff	 jmp	 $LN5@ApplyOneSt
$LN6@ApplyOneSt:
  00127	e9 1b ff ff ff	 jmp	 $LN2@ApplyOneSt
$LN3@ApplyOneSt:
  0012c	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00133	5f		 pop	 rdi
  00134	5d		 pop	 rbp
  00135	c3		 ret	 0
?ApplyOneStep@Gravity@GravityGM@@QEAAXXZ ENDP		; GravityGM::Gravity::ApplyOneStep
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Gravity@GravityGM@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1Gravity@GravityGM@@QEAA@XZ PROC			; GravityGM::Gravity::~Gravity, COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 38
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
; Line 39
  00042	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??1Gravity@GravityGM@@QEAA@XZ ENDP			; GravityGM::Gravity::~Gravity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Gravity@GravityGM@@QEAA@HHPEAD@Z
_TEXT	SEGMENT
this$ = 224
W$ = 232
H$ = 240
M$ = 248
??0Gravity@GravityGM@@QEAA@HHPEAD@Z PROC		; GravityGM::Gravity::Gravity, COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 31
$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
; Line 32
  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR W$[rbp]
  00051	89 08		 mov	 DWORD PTR [rax], ecx
; Line 33
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	8b 8d f0 00 00
	00		 mov	 ecx, DWORD PTR H$[rbp]
  00060	89 48 04	 mov	 DWORD PTR [rax+4], ecx
; Line 35
  00063	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR M$[rbp]
  00071	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
; Line 36
  00075	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00083	5f		 pop	 rdi
  00084	5d		 pop	 rbp
  00085	c3		 ret	 0
??0Gravity@GravityGM@@QEAA@HHPEAD@Z ENDP		; GravityGM::Gravity::Gravity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
$T1 = 200
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 540
$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00029	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7E39D651_iosfwd
  00030	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00035	90		 npad	 1
; Line 541
  00036	b8 ff ff ff ff	 mov	 eax, -1
; Line 542
  0003b	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00042	5f		 pop	 rdi
  00043	5d		 pop	 rbp
  00044	c3		 ret	 0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 212
_Left$ = 256
_Right$ = 264
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 530
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7E39D651_iosfwd
  00041	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00046	90		 npad	 1
; Line 531
  00047	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  0004e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00055	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00057	39 08		 cmp	 DWORD PTR [rax], ecx
  00059	75 0c		 jne	 SHORT $LN3@eq_int_typ
  0005b	c7 85 d4 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv65[rbp], 1
  00065	eb 0a		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  00067	c7 85 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
  00071	0f b6 85 d4 00
	00 00		 movzx	 eax, BYTE PTR tv65[rbp]
; Line 532
  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$char_traits@D@std@@SA_KQEBD@Z
_TEXT	SEGMENT
$T1 = 200
_First$ = 256
?length@?$char_traits@D@std@@SA_KQEBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 460
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7E39D651_iosfwd
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00041	90		 npad	 1
; Line 464
  00042	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00049	e8 00 00 00 00	 call	 strlen
  0004e	90		 npad	 1
; Line 466
  0004f	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?length@?$char_traits@D@std@@SA_KQEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 82
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00042	5f		 pop	 rdi
  00043	5d		 pop	 rbp
  00044	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
; File d:\repo\toolsprogramming\novati\gravity\gravity.cpp
; Line 82
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D2A2B9F_gravity@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
